Set Direction(reverse) and direct
Limitoutput(0,255)..choose upper limit
Direct:Map(0, 255, dutycycle=1.5, 2.5)
Reverse: Map(0, 255, 1.5, 0)
Test my pid with various values, -ve and positive and check output logic consistency
More positive error, more big output
More negative error, more big output in reverse direction 
Eg
Error pidoutput dutycycle an
-50       200            1ms      -90     
0          0                  1.5.       0
50      200            2.5.         +90
Map these values out using a table, for different resolutions(frame sizes), which determines the error
Measure how long detection code takes to execute. 
Change pid.sleep (detection-time)
Pyimagesearch solution doesn't do any of the above modifications. 
It instead recommends to change PID sleep(time) to correspond to speed of detection
Map pid output in pid_process function to be between 0-180, servoRange[0] and servoRange[1]
 Mjrovai servo angle calculation equation
180⁰ - 2.5
90⁰ -  2.0
0⁰ - 1.5
Create one print f that aggregates everything like so and prints it, even if I must create dummy global variables to redundantly track local variables, and send this to same stdout instead of disorganized print statements or log/send to a file
https://www.learnrobotics.org/blog/raspberry-pi-servo-motor/
 Bug source: -90 does not translate into this formula
-90/18 + 3 = -3 dutycycle
 but this is a percentage(0%-100%)
 So use range as 0 - 180 as per MjRovai
 Caters for all ranges
 Also use +2, not plus 3 to prevent exceeding furthest right point sending servo into unexplained full "revolutions"
Mjrovai servo angle calculation equation
180⁰ - 2
90⁰ -  1.5
0⁰ - 1
Scales directly, linearly, unlike -90 to 90. 
As there is no reversal as with 360⁰(180⁰ - 0⁰ - -ve180⁰) no need for  pid reverse mode to increase pid as angle reduces in negative direction.
 Therefore. 
Remember opencv pixels axis numbering: 
from the top left, 
x advances to the left normally, 
But y advances down from the top left
What about tflite convention 
Error =  framecenterx - objcenterx

Pan:
Error = 0, scaled pid = 90⁰, servo at midpoint

Object is to the left: turn left, = 90 to 0. The more positive the more the output to left(-ve) , direct?
 per opencv convention 
Error = +ve, scaled pid = * 90  to 0

Object is to right, turn right, proportionally
Error = -ve, turn from 90 to 180. More negative, more the angle.
Tilt. 
Treat object up same as object left
Treat object down same as object right
 change error to objcenterx - framecenterx so it scales directly
Such that error is possitive, pid output is range 90 to 180
Error is negative, pid output angle is scaled/mapped from 90 to 0
Reversed direction too?